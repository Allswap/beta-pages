/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Distributor } from "../Distributor";

export class Distributor__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(_hNOBT: string, overrides?: Overrides): Promise<Distributor> {
    return super.deploy(_hNOBT, overrides || {}) as Promise<Distributor>;
  }
  getDeployTransaction(
    _hNOBT: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_hNOBT, overrides || {});
  }
  attach(address: string): Distributor {
    return super.attach(address) as Distributor;
  }
  connect(signer: Signer): Distributor__factory {
    return super.connect(signer) as Distributor__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Distributor {
    return new Contract(address, _abi, signerOrProvider) as Distributor;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "contract HopeNobt",
        name: "_hNOBT",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_claimAmt",
        type: "uint256",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "check",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "inviter",
        type: "address",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardEndBlock",
        type: "uint256",
      },
    ],
    name: "setEnd",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_claimAmt",
        type: "uint256",
      },
    ],
    name: "update",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610b5b380380610b5b8339818101604052602081101561003357600080fd5b5051600061003f610195565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600580546001600160a01b0319166001600160a01b0383169081179091556040805163313ce56760e01b8152905163313ce56791600480820192602092909190829003018186803b1580156100dd57600080fd5b505afa1580156100f1573d6000803e3d6000fd5b505050506040513d602081101561010757600080fd5b505160ff16600a0a62989680026001556040805163313ce56760e01b815290516001600160a01b0383169163313ce567916004808301926020929190829003018186803b15801561015757600080fd5b505afa15801561016b573d6000803e3d6000fd5b505050506040513d602081101561018157600080fd5b505160ff16600a0a60640260045550610199565b3390565b6109b3806101a86000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100fd578063919840ad14610121578063f2fde38b14610144578063f5d82b6b1461016a57610088565b80631e83409a1461008d5780632fb565e8146100b5578063715018a6146100d85780637f498ffc146100e0575b600080fd5b6100b3600480360360208110156100a357600080fd5b50356001600160a01b0316610196565b005b6100b3600480360360408110156100cb57600080fd5b508035906020013561039e565b6100b3610427565b6100b3600480360360208110156100f657600080fd5b50356104d3565b6101056105a2565b604080516001600160a01b039092168252519081900360200190f35b6101296105b1565b60408051921515835260208301919091528051918290030190f35b6100b36004803603602081101561015a57600080fd5b50356001600160a01b031661069c565b6100b36004803603604081101561018057600080fd5b506001600160a01b03813516906020013561079e565b600154600254106101ee576040805162461bcd60e51b815260206004820152601b60248201527f4e4f42543a204e6f20726174696f6e206c6566742c206d617465210000000000604482015290519081900360640190fd5b600354158061020b5750600060035411801561020b575060035443105b61025c576040805162461bcd60e51b815260206004820152601b60248201527f4e4f42543a20596f75206d6973736564206f75742c206d617465210000000000604482015290519081900360640190fd5b6000806102676105b1565b91509150816102a75760405162461bcd60e51b81526004018080602001828103825260268152602001806109386026913960400191505060405180910390fd5b6000600682815481106102b657fe5b9060005260206000209060020201600101549050336001600160a01b0316846001600160a01b0316141580156102f457506001600160a01b03841615155b1561039857336000908152600760205260409020805460ff19166001179055600454610321908590610895565b6004805460055460408051630b5c3f8760e01b81526001600160a01b038981169582019590955233602482015290519490920193921691630b5c3f879160448082019260009290919082900301818387803b15801561037f57600080fd5b505af1158015610393573d6000803e3d6000fd5b505050505b50505050565b6103a661090d565b6001600160a01b03166103b76105a2565b6001600160a01b031614610400576040805162461bcd60e51b8152602060048201819052602482015260008051602061095e833981519152604482015290519081900360640190fd5b806006838154811061040e57fe5b9060005260206000209060020201600101819055505050565b61042f61090d565b6001600160a01b03166104406105a2565b6001600160a01b031614610489576040805162461bcd60e51b8152602060048201819052602482015260008051602061095e833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6104db61090d565b6001600160a01b03166104ec6105a2565b6001600160a01b031614610535576040805162461bcd60e51b8152602060048201819052602482015260008051602061095e833981519152604482015290519081900360640190fd5b600381905560055460408051631fd263ff60e21b81526004810184905290516001600160a01b0390921691637f498ffc9160248082019260009290919082900301818387803b15801561058757600080fd5b505af115801561059b573d6000803e3d6000fd5b5050505050565b6000546001600160a01b031690565b33600090815260076020526040812054819060ff16156105d657506000905080610698565b60005b60065481101561068f576000600682815481106105f257fe5b600091825260209182902060029091020154604080516370a0823160e01b815233600482015290516001600160a01b03909216926370a0823192602480840193829003018186803b15801561064657600080fd5b505afa15801561065a573d6000803e3d6000fd5b505050506040513d602081101561067057600080fd5b5051905080156106865750600192509050610698565b506001016105d9565b50600080915091505b9091565b6106a461090d565b6001600160a01b03166106b56105a2565b6001600160a01b0316146106fe576040805162461bcd60e51b8152602060048201819052602482015260008051602061095e833981519152604482015290519081900360640190fd5b6001600160a01b0381166107435760405162461bcd60e51b81526004018080602001828103825260268152602001806109126026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6107a661090d565b6001600160a01b03166107b76105a2565b6001600160a01b031614610800576040805162461bcd60e51b8152602060048201819052602482015260008051602061095e833981519152604482015290519081900360640190fd5b604080518082019091526001600160a01b039283168152602081019182526006805460018101825560009190915290517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f600290920291820180546001600160a01b0319169190941617909255517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4090910155565b600254600154036000818311156108ac57816108ae565b825b6002805482019055600554604080516340c10f1960e01b81526001600160a01b0388811660048301526024820185905291519394509116916340c10f199160448082019260009290919082900301818387803b15801561037f57600080fd5b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734e4f42543a204c6561766520697420746f2074686f736520696e206e6565642c206d617465214f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a26469706673582212200e3f51560121ecc875cb3ff36a8b3b9e57937b5ecbc480bb9d4a3ebb50a7218264736f6c634300060c0033";
